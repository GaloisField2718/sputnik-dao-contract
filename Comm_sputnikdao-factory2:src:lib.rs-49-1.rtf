Commentaires_sputnikdao-factory2/src/lib.rs:49:1

 pub fn remove_contract_self(&mut self, code_hash: Base58CryptoHash) {
        let account_id = env::predecessor_account_id();
        let factory_id = env::current_account_id();
        let method_name = "remove_blob";

        // NOTE: Not verifing the hash, in case factory removes a hash before DAO does
        let method_args = &json!({ "hash": &code_hash }).to_string().into_bytes();
        let callback_method = "on_remove_contract_self";
        let callback_args = &json!({ "account_id": &account_id, "code_hash": &code_hash })
            .to_string()
            .into_bytes();

        // Create a promise toward given account.
        let promise_id = env::promise_batch_create(&account_id);
        env::promise_batch_action_function_call(
            promise_id,
            method_name,
            method_args,
            NO_DEPOSIT,
            GAS_STORE_CONTRACT_LEFTOVER,
        );
        // attach callback to the factory.
        let _ = env::promise_then(
            promise_id,
            factory_id,
            callback_method,
            callback_args,
            NO_DEPOSIT,
            ON_REMOVE_CONTRACT_GAS,
        );
        env::promise_return(promise_id);
    }